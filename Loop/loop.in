#include <EthernetENC.h>
#include <SPI.h>
#include <PubSubClient.h>

int previous = 0;
int sensorValue = 3;
int voltage;
int count = 15;

const char* mqtt_server = "192.168.1.211"; 
const int mqtt_port = 1883; 
const char* mqttUser = "getparking";
const char* mqttPassword = "playtmbiz";

EthernetClient ethClient;
PubSubClient client(ethClient);

IPAddress ip(192,168,1,219);
IPAddress gwip(192,168,1,1);
IPAddress subnet (255,255,255,0);

byte mac[] = {0x19, 0xED, 0xBA, 0xFE, 0xFE, 0x00 };

unsigned long lastMsg = 0;
const char*pub = "loop/"; 
const char*post = "reconnect/";
//const char*sub = "data/";
const char*publish2 = "counting/";
const char* willtopic = "death/";
const char* acknowledge = "display_P2/";

const char* clientname = "P2Display";
const char* willMsg = "P2disdead";
String reconnectMsg = "ConnectedP2";

String Car;
String stri;
long lastReconnectAttempt = 0;

void callback(char* topic, byte* message, unsigned int length);
void callback(char* topic, byte* payload, unsigned int length)
{
 for (int i = 0; i < length; i++)
  {
    Serial.print((char)payload[i]);
    Car += (char)payload[i];
  }
  stri = String(Car);
  Serial.println(stri);
  publishMessage(publish2,"A-"+stri,true);
  count = 0;
}

void setup()
{
  Serial.begin(9600);
  while (!Serial) delay(1);
  Ethernet.begin(mac,ip,gwip,subnet);
  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);
  client.setKeepAlive(60);
  delay(1500);
  pinMode(sensorValue, INPUT_PULLUP);
  long lastReconnectAttempt = 0;
}
boolean reconnect() {
  if (client.connect(clientname,mqttUser, mqttPassword, willtopic,0,false,willMsg,true)) {
    // Once connected, publish an announcement...
    publishMessage(post,reconnectMsg,true);
    // ... and resubscribe
    client.subscribe(acknowledge);
  }
  return client.connected();
}

void publishMessage(const char* topic, String payload , boolean retained)
{
  if (client.publish(topic, payload.c_str(), true))
    Serial.println("Message publised [" + String(topic) + "]: " + payload);
}
void loop()
{
  if (!client.connected()) {
    long now = millis();
    if (now - lastReconnectAttempt > 5000) {
      lastReconnectAttempt = now;
      // Attempt to reconnect
      if (reconnect()) {
        lastReconnectAttempt = 0;
      }
    }
  } else {
    // Client connected
    client.loop();
  voltage = digitalRead(sensorValue);
  if ( voltage != LOW)
  {
    //Serial.println(voltage);
  }
  else
  {
    Serial.print("Car hai");
    Serial.println(voltage); 
    if (previous == LOW)
    {
      Serial.println("Same car");
    }
    else
    {
      count ++;
      String vehicle = String(count);
      Serial.print("count is ");
      Serial.println(count);
      stri = String(count);
      publishMessage(pub, "en2", true);
      publishMessage(pub, "ex1", true);
    }
  }
  previous = voltage;
}
}
